version: '3.7'

services:
  user-ms:
    build:
      context: ./Backend/user-ms
      dockerfile: Dockerfile
    image: user-ms
    container_name: user-ms
    command: npm run dev-user
    volumes:
      - ./Backend/user-ms:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5001:5001"
    networks:
      - app-network
  
  dep-user-ms:
    build:
      context: ./Backend/user-ms
      dockerfile: Dockerfile
    image: ghassenbogh/user-ms
    container_name: user-ms
    command: npm run dev-user
    volumes:
      - ./Backend/user-ms:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5001:5001"
    networks:
      - app-network

  categorie-ms:
    build:
      context: ./Backend/categorie-ms
      dockerfile: Dockerfile
    image: categorie-ms
    container_name: categorie-ms
    command: npm run dev-cat
    volumes:
      - ./Backend/categorie-ms:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5002:5002"
    depends_on:
      - user-ms
    networks:
      - app-network

  offre-ms:
    build:
      context: ./Backend/offre-ms
      dockerfile: Dockerfile
    image: offre-ms
    container_name: offre-ms
    command: npm run dev-offre
    volumes:
      - ./Backend/offre-ms:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5003:5003"
    depends_on:
      - categorie-ms
    networks:
      - app-network

  notification-ms:
    build:
      context: ./Backend/notification-ms
      dockerfile: Dockerfile
    image: notification-ms
    container_name: notification-ms
    command: npm run dev-notif
    volumes:
      - ./Backend/notification-ms:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5004:5004"
    depends_on:
      - offre-ms
    networks:
      - app-network
  react-client:
    build:
      context: ./Frontend/client
      dockerfile: Dockerfile
    image: react-client
    container_name: react-client
    command: npm run start
    volumes:
      - ./Frontend/client:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - user-ms
    networks:
      - app-network

  react-admin:
    build:
      context: ./Frontend/admin
      dockerfile: Dockerfile
    image: react-admin
    container_name: react-admin
    command: npm run start
    volumes:
      - ./Frontend/admin:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3001:3001"
    depends_on:
      - user-ms
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

volumes:
  data-volume:
  node_modules:
  web-root:
    driver: local